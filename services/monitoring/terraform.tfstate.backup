{
  "version": 4,
  "terraform_version": "1.11.2",
  "serial": 22,
  "lineage": "83e94667-c4d8-b07d-8327-97661ce45f73",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.81.0",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1745029321,
                "last_deployed": 1745074510,
                "name": "prometheus",
                "namespace": "monitoring",
                "notes": "kube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=prometheus\"\n\nGet Grafana 'admin' user password by running:\n\n  kubectl --namespace monitoring get secrets prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 -d ; echo\n\nAccess Grafana local instance:\n\n  export POD_NAME=$(kubectl --namespace monitoring get pod -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -oname)\n  kubectl --namespace monitoring port-forward $POD_NAME 3000\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.monitoring.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace monitoring port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 3,
                "values": "{\"alertmanager\":{\"enabled\":false},\"grafana\":{\"enabled\":true,\"ingress\":{\"enabled\":false},\"service\":{\"type\":\"ClusterIP\"}},\"prometheus\":{\"prometheusSpec\":{\"ingress\":{\"enabled\":false},\"service\":{\"type\":\"ClusterIP\"},\"storageSpec\":{\"volumeClaimTemplate\":{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"10Gi\"}},\"storageClassName\":\"local-path\"}}}}}}",
                "version": "70.7.0"
              }
            ],
            "name": "prometheus",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "alertmanager.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "grafana.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.ingress.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "grafana.service.type",
                "type": "",
                "value": "ClusterIP"
              },
              {
                "name": "prometheus.prometheusSpec.ingress.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheus.prometheusSpec.service.annotations.traefik\\.ingress\\.kubernetes\\.io/ssl-redirect",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheus.prometheusSpec.service.type",
                "type": "",
                "value": "ClusterIP"
              },
              {
                "name": "prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage",
                "type": "",
                "value": "10Gi"
              },
              {
                "name": "prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName",
                "type": "",
                "value": "local-path"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "70.7.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring/grafana",
            "metadata": [
              {
                "annotations": {
                  "external-dns.alpha.kubernetes.io/hostname": "grafana.soumith.undernet.cs.odu.edu",
                  "traefik.ingress.kubernetes.io/router.entrypoints": "web"
                },
                "generate_name": "",
                "generation": 2,
                "labels": {},
                "name": "grafana",
                "namespace": "monitoring",
                "resource_version": "1466638",
                "uid": "fcc1df47-9102-4931-943c-544e1dfab712"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "traefik",
                "rule": [
                  {
                    "host": "grafana.soumith.undernet.cs.odu.edu",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "prometheus-grafana",
                                    "port": [
                                      {
                                        "name": "http-web",
                                        "number": 0
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "172.18.6.105"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.prometheus",
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring/prometheus",
            "metadata": [
              {
                "annotations": {
                  "external-dns.alpha.kubernetes.io/hostname": "prometheus.soumith.undernet.cs.odu.edu",
                  "traefik.ingress.kubernetes.io/router.entrypoints": "web"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "prometheus",
                "namespace": "monitoring",
                "resource_version": "1466482",
                "uid": "cd86e15d-8283-4c06-867f-eeddce531621"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "traefik",
                "rule": [
                  {
                    "host": "prometheus.soumith.undernet.cs.odu.edu",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "prometheus-kube-prometheus-prometheus",
                                    "port": [
                                      {
                                        "name": "http-web",
                                        "number": 0
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "172.18.6.105"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.kubernetes_service.prometheus_server",
            "helm_release.prometheus",
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "monitoring",
                "resource_version": "1436413",
                "uid": "a6915080-811c-4fad-84de-ddeb52f0e3ee"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    }
  ],
  "check_results": null
}
